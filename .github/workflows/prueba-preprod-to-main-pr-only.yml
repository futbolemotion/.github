name: üîÑ Create PR pre_prod to main

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: "Selecciona el repositorio para crear PR (pre_prod ‚Üí main)"
        required: true
        type: choice
        options:
          - zend-library
          - zend-src
          - basket-zend-src
          - running-zend-src
          - front-land-bundle
          - back-land-bundle
          - atland
          - atland-vendor
          - superadmin
          # Agrega los repos de la organizaci√≥n aqu√≠

jobs:
  create-pr-job:
    name: Create PR pre_prod ‚Üí main
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.inputs.repositories }}
          token: ${{ secrets.ORG_REPO_UPDATE_PAT }}
          fetch-depth: 0

      - name: Check branches and create PR
        id: create_pr
        run: |
          # Verificar que existan las ramas
          if ! git ls-remote --heads origin main | grep -q 'main'; then
            echo "‚ùå La rama 'main' no existe en el repositorio"
            exit 1
          fi
          
          if ! git ls-remote --heads origin pre_prod | grep -q 'pre_prod'; then
            echo "‚ùå La rama 'pre_prod' no existe en el repositorio"
            exit 1
          fi
          
          # Obtener el n√∫mero de commits diferentes
          git fetch origin main pre_prod
          COMMIT_COUNT=$(git rev-list --count origin/main..origin/pre_prod)
          
          if [ "$COMMIT_COUNT" -eq 0 ]; then
            echo "No hay cambios para mergear de pre_prod a main"
            echo "CHANGES_EXIST=false" >> $GITHUB_ENV
            exit 0
          fi
          
          echo "CHANGES_EXIST=true" >> $GITHUB_ENV
          echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.CHANGES_EXIST == 'true'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "pre_prod"
          destination_branch: "main"
          pr_title: "üîÑ Merge pre_prod into main (${{ env.COMMIT_COUNT }} commits)"
          pr_body: |
            ## üìã Descripci√≥n
            Pull Request autom√°tico para mergear cambios de la rama `pre_prod` a `main`.
            
            ## üîÑ Cambios incluidos
            Este PR incluye ${{ env.COMMIT_COUNT }} commits que est√°n en `pre_prod` y no est√°n en `main`.
            
            ## üßæ Detalles t√©cnicos
            - Rama origen: `pre_prod`
            - Rama destino: `main`
            - N√∫mero de commits: ${{ env.COMMIT_COUNT }}
            
            ## ‚úÖ Checklist
            - [ ] Revisar los cambios incluidos
            - [ ] Verificar que no hay conflictos
            - [ ] Aprobar el merge si todo est√° correcto
            
            ---
            *PR generado autom√°ticamente por GitHub Actions*
          pr_reviewer: "${{ github.actor }}"
          pr_label: "automated-pr,pre-prod-to-main,merge"
          github_token: ${{ secrets.ORG_REPO_UPDATE_PAT }}

      - name: PR Creation Status
        run: |
          if [ "${{ env.CHANGES_EXIST }}" == "true" ]; then
            echo "‚úÖ Pull Request creado exitosamente de pre_prod a main"
            echo "N√∫mero de commits incluidos: ${{ env.COMMIT_COUNT }}"
          else
            echo "‚ÑπÔ∏è No hay cambios para mergear de pre_prod a main"
          fi 