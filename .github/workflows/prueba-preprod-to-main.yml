name: üîë Merge pre_prod to main in selected repos

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: "Selecciona el repositorio a actualizar (pre_prod ‚Üí main)"
        required: true
        type: choice
        options:
          - zend-library
          - zend-src
          - basket-zend-src
          - running-zend-src
          - front-land-bundle
          - back-land-bundle
          - atland
          - atland-vendor
          - superadmin
          # Agrega los 38 repos de tu organizaci√≥n aqu√≠

jobs:
  merge-job:
    name: Merge pre_prod ‚Üí main
    runs-on: ubuntu-latest

    steps:
      - name: Set variables
        id: vars
        run: |
          echo "REPO_NAME=${{ github.event.inputs.repositories }}" >> $GITHUB_ENV
          echo "CLONE_URL=https://x-access-token:${{ secrets.ORG_REPO_UPDATE_PAT }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}.git" >> $GITHUB_ENV

      - name: Check if main branch exists
        run: |
          BRANCH_EXISTS=$(git ls-remote --heads "$CLONE_URL" main | wc -l)
          if [ "$BRANCH_EXISTS" -eq 0 ]; then
            echo "‚ùå La rama 'main' no existe en el repositorio $REPO_NAME. Saliendo."
            exit 1
          fi

      - name: Clone repository and try merge
        id: merge_attempt
        run: |
          set -e
          git clone --branch main "$CLONE_URL" repo
          cd repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin pre_prod
          if git merge origin/pre_prod --no-ff --no-edit; then
            echo "MERGE_SUCCESS=true" >> $GITHUB_ENV
          else
            echo "MERGE_SUCCESS=false" >> $GITHUB_ENV
          fi

      - name: Push to main if merge succeeded
        if: env.MERGE_SUCCESS == 'true'
        run: |
          cd repo
          git push origin main
          echo "‚úÖ Merge completado y enviado a main."

      - name: Create pull request if merge failed
        if: env.MERGE_SUCCESS == 'false'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.ORG_REPO_UPDATE_PAT }}
          base: main
          branch: pre_prod
          title: "üîÄ Merge pre_prod into main (automated PR)"
          body: |
            El merge autom√°tico de `pre_prod` a `main` fall√≥ por conflicto.
            Este Pull Request fue generado autom√°ticamente para facilitar la revisi√≥n y resoluci√≥n manual.
          reviewers: ${{ github.actor }} 