name: 🔄 Create PR pre_prod to main

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: "Selecciona el repositorio para crear PR (pre_prod → main)"
        required: true
        type: choice
        options:
          - zend-library
          - zend-src
          - basket-zend-src
          - running-zend-src
          - front-land-bundle
          - back-land-bundle
          - atland
          - atland-vendor
          - superadmin
          # Agrega los repos de la organización aquí

jobs:
  create-pr-job:
    name: Create PR pre_prod → main
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/${{ github.event.inputs.repositories }}
          token: ${{ secrets.ORG_REPO_UPDATE_PAT }}
          fetch-depth: 0

      - name: Check branches and differences
        id: check_diff
        run: |
          # Verificar que existan las ramas
          if ! git ls-remote --heads origin main | grep -q 'main'; then
            echo "❌ La rama 'main' no existe en el repositorio"
            exit 1
          fi
          
          if ! git ls-remote --heads origin pre_prod | grep -q 'pre_prod'; then
            echo "❌ La rama 'pre_prod' no existe en el repositorio"
            exit 1
          fi
          
          # Obtener el número de commits diferentes
          git fetch origin main pre_prod
          COMMIT_COUNT=$(git rev-list --count origin/main..origin/pre_prod)
          
          if [ "$COMMIT_COUNT" -eq 0 ]; then
            echo "No hay cambios para mergear de pre_prod a main"
            echo "CHANGES_EXIST=false" >> $GITHUB_ENV
            exit 0
          fi
          
          echo "CHANGES_EXIST=true" >> $GITHUB_ENV
          echo "COMMIT_COUNT=$COMMIT_COUNT" >> $GITHUB_ENV

      - name: Create Pull Request
        if: env.CHANGES_EXIST == 'true'
        run: |
          # Crear el PR usando la API de GitHub directamente
          PR_BODY="## 📋 Descripción\nPull Request automático para mergear cambios de la rama \`pre_prod\` a \`main\`.\n\n## 🔄 Cambios incluidos\nEste PR incluye ${{ env.COMMIT_COUNT }} commits que están en \`pre_prod\` y no están en \`main\`.\n\n## 🧾 Detalles técnicos\n- Rama origen: \`pre_prod\`\n- Rama destino: \`main\`\n- Número de commits: ${{ env.COMMIT_COUNT }}\n\n## ✅ Checklist\n- [ ] Revisar los cambios incluidos\n- [ ] Verificar que no hay conflictos\n- [ ] Aprobar el merge si todo está correcto\n\n---\n*PR generado automáticamente por GitHub Actions*"
          
          PR_DATA=$(cat << EOF
          {
            "title": "🔄 Merge pre_prod into main (${{ env.COMMIT_COUNT }} commits)",
            "body": "$PR_BODY",
            "head": "pre_prod",
            "base": "main"
          }
          EOF
          )
          
          # Crear el PR
          PR_RESPONSE=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.ORG_REPO_UPDATE_PAT }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/pulls \
            -d "$PR_DATA")
          
          # Extraer el número del PR
          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number')
          
          if [ "$PR_NUMBER" != "null" ]; then
            echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
            
            # Añadir labels
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.ORG_REPO_UPDATE_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/issues/$PR_NUMBER/labels \
              -d '{"labels":["automated-pr","pre-prod-to-main","merge"]}'
            
            # Añadir assignee
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.ORG_REPO_UPDATE_PAT }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/issues/$PR_NUMBER/assignees \
              -d "{\"assignees\":[\"${{ github.actor }}\"]}"
            
            echo "✅ Pull Request #$PR_NUMBER creado exitosamente"
          else
            echo "❌ Error al crear el Pull Request"
            echo "$PR_RESPONSE"
            exit 1
          fi

      - name: PR Creation Status
        run: |
          if [ "${{ env.CHANGES_EXIST }}" == "true" ]; then
            if [ -n "${{ env.PR_NUMBER }}" ]; then
              echo "✅ Pull Request #${{ env.PR_NUMBER }} creado exitosamente de pre_prod a main"
              echo "Número de commits incluidos: ${{ env.COMMIT_COUNT }}"
            else
              echo "❌ Error al crear el Pull Request"
            fi
          else
            echo "ℹ️ No hay cambios para mergear de pre_prod a main"
          fi

      - name: Generate Job Summary
        if: always()
        run: |
          echo "## 📊 Resumen del Workflow - PR pre_prod → main" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Información del repositorio
          echo "### 🏗️ Información del Repositorio" >> $GITHUB_STEP_SUMMARY
          echo "- **Repositorio seleccionado:** \`${{ github.event.inputs.repositories }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Ejecutado por:** \`${{ github.actor }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Fecha de ejecución:** \`$(date '+%Y-%m-%d %H:%M:%S UTC')\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ env.CHANGES_EXIST }}" == "true" ]; then
            if [ -n "${{ env.PR_NUMBER }}" ]; then
              # Información del PR creado
              echo "### ✅ Pull Request Creado Exitosamente" >> $GITHUB_STEP_SUMMARY
              echo "- **Número de PR:** [#${{ env.PR_NUMBER }}](https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/pull/${{ env.PR_NUMBER }})" >> $GITHUB_STEP_SUMMARY
              echo "- **Título:** 🔄 Merge pre_prod into main (${{ env.COMMIT_COUNT }} commits)" >> $GITHUB_STEP_SUMMARY
              echo "- **Rama origen:** \`pre_prod\`" >> $GITHUB_STEP_SUMMARY
              echo "- **Rama destino:** \`main\`" >> $GITHUB_STEP_SUMMARY
              echo "- **Número de commits:** ${{ env.COMMIT_COUNT }}" >> $GITHUB_STEP_SUMMARY
              echo "- **Labels aplicados:** \`automated-pr\`, \`pre-prod-to-main\`, \`merge\`" >> $GITHUB_STEP_SUMMARY
              echo "- **Assignee:** \`${{ github.actor }}\`" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Detalles de los commits
              echo "### 📝 Detalles de los Commits" >> $GITHUB_STEP_SUMMARY
              echo "Commits que están en \`pre_prod\` y no están en \`main\`:" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Obtener la lista de commits
              git fetch origin main pre_prod
              COMMITS=$(git log --oneline --no-merges origin/main..origin/pre_prod)
              
              if [ -n "$COMMITS" ]; then
                echo '```' >> $GITHUB_STEP_SUMMARY
                echo "$COMMITS" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
              else
                echo "> No se pudieron obtener los detalles de los commits" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Información adicional del PR
              echo "### 🔗 Enlaces Útiles" >> $GITHUB_STEP_SUMMARY
              echo "- [Ver Pull Request](https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/pull/${{ env.PR_NUMBER }})" >> $GITHUB_STEP_SUMMARY
              echo "- [Comparar cambios](https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}/compare/main...pre_prod)" >> $GITHUB_STEP_SUMMARY
              echo "- [Repositorio](https://github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }})" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              
              # Estado del workflow
              echo "### 🎯 Estado del Workflow" >> $GITHUB_STEP_SUMMARY
              echo "✅ **ÉXITO** - El Pull Request se creó correctamente" >> $GITHUB_STEP_SUMMARY
              
            else
              echo "### ❌ Error en la Creación del PR" >> $GITHUB_STEP_SUMMARY
              echo "No se pudo crear el Pull Request. Revisa los logs anteriores para más detalles." >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### 🎯 Estado del Workflow" >> $GITHUB_STEP_SUMMARY
              echo "❌ **FALLO** - Error al crear el Pull Request" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ℹ️ Sin Cambios para Mergear" >> $GITHUB_STEP_SUMMARY
            echo "No hay commits en la rama \`pre_prod\` que no estén ya en \`main\`." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Razón:** Las ramas \`pre_prod\` y \`main\` están sincronizadas." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### 🎯 Estado del Workflow" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ **COMPLETADO** - No se requieren acciones adicionales" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Resumen generado automáticamente por GitHub Actions*" >> $GITHUB_STEP_SUMMARY