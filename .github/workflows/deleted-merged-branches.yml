name: üóëÔ∏è Delete Merged Branches

on:
  workflow_call:
    inputs:
      protected_branches:
        description: 'Comma-separated list of protected branches'
        required: false
        default: 'main,pre_prod,Qa_test,qa,QA'
        type: string
      target_branches:
        description: 'Comma-separated list of target branches that trigger deletion'
        required: false
        default: 'main,pre_prod,Qa_test,qa,QA'
        type: string

jobs:
  delete-merged-branches:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git configuration
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Delete merged branch
        run: |
          # Get branch name and target branch
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          
          echo "üîç Checking PR: $BRANCH_NAME ‚Üí $TARGET_BRANCH"
          
          # Convert comma-separated strings to arrays
          IFS=',' read -ra PROTECTED_BRANCHES <<< "${{ inputs.protected_branches }}"
          IFS=',' read -ra TARGET_BRANCHES <<< "${{ inputs.target_branches }}"
          
          echo "üõ°Ô∏è  Protected branches: ${PROTECTED_BRANCHES[*]}"
          echo "üéØ Target branches that trigger deletion: ${TARGET_BRANCHES[*]}"
          
          # Verificar si la rama est√° protegida
          for protected in "${PROTECTED_BRANCHES[@]}"; do
            if [[ "$BRANCH_NAME" == "$protected" ]]; then
              echo "‚ùå Branch '$BRANCH_NAME' is protected, skipping deletion"
              exit 0
            fi
          done
          
          # Verificar si el target branch activa la eliminaci√≥n
          for target in "${TARGET_BRANCHES[@]}"; do
            if [[ "$TARGET_BRANCH" == "$target" ]]; then
              echo "‚úÖ Target branch '$TARGET_BRANCH' triggers deletion"
              
              # Verificar si la rama existe remotamente
              if git ls-remote --heads origin "$BRANCH_NAME" | grep -q "$BRANCH_NAME"; then
                echo "üóëÔ∏è  Deleting branch '$BRANCH_NAME'"
                git push origin --delete "$BRANCH_NAME"
                echo "‚úÖ Successfully deleted branch '$BRANCH_NAME'"
              else
                echo "‚ÑπÔ∏è  Branch '$BRANCH_NAME' doesn't exist remotely or was already deleted"
              fi
              exit 0
            fi
          done
          
          echo "‚ö†Ô∏è  Target branch '$TARGET_BRANCH' doesn't trigger deletion, skipping"

      - name: Create summary
        if: always()
        run: |
          echo "## Branch Deletion Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.event.pull_request.head.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target:** ${{ github.event.pull_request.base.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Protected Branches:** ${{ inputs.protected_branches }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Target Branches:** ${{ inputs.target_branches }}" >> $GITHUB_STEP_SUMMARY
