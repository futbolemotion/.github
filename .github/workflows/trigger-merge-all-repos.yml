# .github/workflows/trigger_merge_all_repos.yml
name: ðŸ’¿ Trigger Merge Main to Pre-Prod for All Repos

on:
  schedule:
    - cron: '0 8 * * *' # Todos los dÃ­as a las 8am UTC
  workflow_dispatch:
    inputs:
      repos_to_update:
        description: 'Comma-separated list of specific repositories to update (e.g., repo-a,repo-b). Leave empty for all listed below.'
        required: false
        default: ''
      skip_confirmation:
        description: 'Check to skip manual confirmation for large operations. Use with caution!'
        type: boolean
        default: false

jobs:
  merge_all_repos:
    runs-on: ubuntu-latest
    steps:
      - name: Define All Repositories
        id: all_repos_list
        run: |
          ALL_ORG_REPOS=(
            "futbolemotion/superadmin"
            # Agrega aquÃ­ los otros 37 repositorios, uno por lÃ­nea
          )

          REPOS_ARRAY=()
          if [ -n "${{ github.event.inputs.repos_to_update }}" ]; then
            IFS=',' read -ra SELECTED_INPUT_REPOS <<< "${{ github.event.inputs.repos_to_update }}"
            for selected_repo_short_name in "${SELECTED_INPUT_REPOS[@]}"; do
              REPO_MATCH_FOUND=false
              for full_repo_name in "${ALL_ORG_REPOS[@]}"; do
                if [[ "$full_repo_name" == *"/${selected_repo_short_name}" ]]; then
                  REPOS_ARRAY+=("$full_repo_name")
                  REPO_MATCH_FOUND=true
                  break
                fi
              done
              if [ "$REPO_MATCH_FOUND" = false ]; then
                echo "::warning::Repository '$selected_repo_short_name' not found in the predefined list. Skipping."
              fi
            done
          else
            REPOS_ARRAY=("${ALL_ORG_REPOS[@]}")
          fi

          printf "%s\n" "${REPOS_ARRAY[@]}" > repos_to_merge.txt

      - name: Confirm Operation (if not skipped)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.skip_confirmation == 'false'
        run: |
          echo "You are about to merge 'main' into 'pre_prod' for the following repositories:"
          cat repos_to_merge.txt | sed 's/^/- /'
          echo ""
          echo "To proceed, you must manually approve this step."
          exit 1

      - name: Merge main into pre_prod for all repos
        env:
          GITHUB_TOKEN: ${{ secrets.ORG_REPO_UPDATE_PAT }}
        run: |
          while IFS= read -r REPO; do
            echo "=============================="
            echo "Processing $REPO"
            REPO_NAME=$(basename "$REPO")
            if git clone "https://oauth2:${GITHUB_TOKEN}@github.com/${REPO}.git" "$REPO_NAME"; then
              cd "$REPO_NAME"
              if git show-ref --verify --quiet refs/heads/pre_prod; then
                git checkout pre_prod
                git pull origin pre_prod
                if git pull origin main; then
                  if git merge main --no-ff -m "Merge main into pre_prod (automated by workflow)"; then
                    git push origin pre_prod
                    echo "Successfully merged and pushed main to pre_prod in $REPO"
                  else
                    echo "::error::Merge conflict or error in $REPO. Manual intervention required."
                    git merge --abort || true
                  fi
                else
                  echo "::error::Failed to pull main in $REPO"
                fi
              else
                echo "::warning::Branch 'pre_prod' does not exist in $REPO. Skipping."
              fi
              cd ..
            else
              echo "::error::Failed to clone $REPO"
            fi
            echo "=============================="
          done < repos_to_merge.txt