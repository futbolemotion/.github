name: ‚öôÔ∏è Merge main to pre_prod in selected repos

on:
  workflow_dispatch:
    inputs:
      repositories:
        description: "Selecciona el repositorio a actualizar (main ‚Üí pre_prod)"
        required: true
        type: choice
        options:
          - zend-library
          - zend-src
          - basket-zend-src
          - running-zend-src
          - front-land-bundle
          - back-land-bundle
          - atland
          - atland-vendor
          - superadmin
          # Agrega los repos de la organizaci√≥n aqu√≠

jobs:
  merge-job:
    name: Merge main ‚Üí pre_prod
    runs-on: ubuntu-latest

    steps:
      - name: Set variables
        id: vars
        run: |
          echo "REPO_NAME=${{ github.event.inputs.repositories }}" >> $GITHUB_ENV
          echo "CLONE_URL=https://x-access-token:${{ secrets.ORG_REPO_UPDATE_PAT }}@github.com/${{ github.repository_owner }}/${{ github.event.inputs.repositories }}.git" >> $GITHUB_ENV

      - name: Check if pre_prod branch exists
        run: |
          BRANCH_EXISTS=$(git ls-remote --heads "$CLONE_URL" pre_prod | wc -l)
          if [ "$BRANCH_EXISTS" -eq 0 ]; then
            echo "‚ùå La rama 'pre_prod' no existe en el repositorio $REPO_NAME. Saliendo."
            exit 1
          fi

      - name: Clone repository and try merge
        id: merge_attempt
        run: |
          set -e
          git clone --branch pre_prod "$CLONE_URL" repo
          cd repo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git fetch origin main
          if git merge origin/main --no-ff --no-edit; then
            echo "MERGE_SUCCESS=true" >> $GITHUB_ENV
          else
            echo "MERGE_SUCCESS=false" >> $GITHUB_ENV
          fi

      - name: Push to pre_prod if merge succeeded
        if: env.MERGE_SUCCESS == 'true'
        run: |
          cd repo
          git push origin pre_prod
          echo "‚úÖ Merge completado y enviado a pre_prod."

      - name: Create pull request if merge failed
        if: env.MERGE_SUCCESS == 'false'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.ORG_REPO_UPDATE_PAT }}
          repository: ${{ github.repository_owner }}/${{ github.event.inputs.repositories }}
          base: pre_prod
          branch: main
          title: "üîÄ Merge main into pre_prod (automated PR)"
          body: |
            El merge autom√°tico de `main` a `pre_prod` fall√≥ por conflicto.
            Este Pull Request fue generado autom√°ticamente para facilitar la revisi√≥n y resoluci√≥n manual.